-- MySQL Script generated by MySQL Workbench
-- 12/26/15 21:26:48
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema medicinedb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema medicinedb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `medicinedb` DEFAULT CHARACTER SET utf8 ;
USE `medicinedb` ;

-- -----------------------------------------------------
-- Table `medicinedb`.`tb_diccionario_dcsa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medicinedb`.`tb_diccionario_dcsa` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `codigodcsa` BIGINT NULL,
  `nombredcsa` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medicinedb`.`tb_diccionario_dcp`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medicinedb`.`tb_diccionario_dcp` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `codigodcp` BIGINT NULL,
  `nombredcp` VARCHAR(255) NULL,
  `nombrecortodcp` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medicinedb`.`tb_diccionario_dcpf`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medicinedb`.`tb_diccionario_dcpf` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `codigodcpf` BIGINT NULL,
  `nombredcpf` VARCHAR(255) NULL,
  `nombrecortodcpf` VARCHAR(255) NULL,
  `codigodcp` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_tb_diccionario_dcpf_tb_diccionario_dcp1_idx` (`codigodcp` ASC),
  CONSTRAINT `fk_tb_diccionario_dcpf_tb_diccionario_dcp1`
    FOREIGN KEY (`codigodcp`)
    REFERENCES `medicinedb`.`tb_diccionario_dcp` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medicinedb`.`tb_diccionario_envases`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medicinedb`.`tb_diccionario_envases` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `codigoenvase` INT NULL,
  `envase` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medicinedb`.`tb_forma_farmaceutica_simplificada`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medicinedb`.`tb_forma_farmaceutica_simplificada` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `codigoformafarmaceuticasimplificada` INT NULL,
  `formafarmaceuticasimplificada` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medicinedb`.`tb_forma_farmaceutica`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medicinedb`.`tb_forma_farmaceutica` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `codigoformafarmaceutica` INT NULL,
  `formafarmaceutica` VARCHAR(255) NULL,
  `codigoformafarmaceuticasimplificada` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_tb_forma_farmaceutica_tb_forma_farmaceutica_simplificada_idx` (`codigoformafarmaceuticasimplificada` ASC),
  CONSTRAINT `fk_tb_forma_farmaceutica_tb_forma_farmaceutica_simplificada1`
    FOREIGN KEY (`codigoformafarmaceuticasimplificada`)
    REFERENCES `medicinedb`.`tb_forma_farmaceutica_simplificada` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medicinedb`.`tb_diccionario_atc`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medicinedb`.`tb_diccionario_atc` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nroatc` BIGINT NULL,
  `codigoatc` VARCHAR(10) NULL,
  `descatc` VARCHAR(150) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medicinedb`.`tb_diccionario_unidad_contenido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medicinedb`.`tb_diccionario_unidad_contenido` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `codigounidadcontenido` INT NULL,
  `unidadcontenido` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medicinedb`.`tb_diccionario_situacion_registro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medicinedb`.`tb_diccionario_situacion_registro` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `codigosituacionregistro` INT NULL,
  `situacionregistro` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medicinedb`.`tb_prescripcion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medicinedb`.`tb_prescripcion` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cod_nacion` BIGINT NULL,
  `nro_definitivo` VARCHAR(45) NULL,
  `des_nomco` VARCHAR(255) NULL,
  `des_prese` VARCHAR(255) NULL,
  `cod_dcsa` INT NULL,
  `cod_dcp` INT NULL,
  `cod_dcpf` INT NULL,
  `des_dosific` VARCHAR(255) NULL,
  `cod_envase` INT NULL,
  `contenido` FLOAT NULL,
  `unidad_contenido` INT NULL,
  `nro_conte` VARCHAR(255) NULL,
  `sw_psicotropo` TINYINT(1) NULL,
  `lista_psicotropo` VARCHAR(45) NULL,
  `sw_estupefaciente` TINYINT(1) NULL,
  `lista_estupefaciente` VARCHAR(45) NULL,
  `sw_afecta_conduccion` TINYINT(1) NULL,
  `sw_triangulo_negro` TINYINT(1) NULL,
  `url_fictec` VARCHAR(255) NULL,
  `url_prosp` VARCHAR(255) NULL,
  `sw_receta` TINYINT(1) NULL,
  `sw_generico` TINYINT(1) NULL,
  `sw_sustituible` TINYINT(1) NULL,
  `sw_envase_clinico` TINYINT(1) NULL,
  `sw_uso_hospitalario` TINYINT(1) NULL,
  `sw_diagnostico_hospitalario` TINYINT(1) NULL,
  `sw_tld` TINYINT(1) NULL,
  `sw_especial_control_medico` TINYINT(1) NULL,
  `sw_huerfano` TINYINT(1) NULL,
  `sw_base_a_plantas` TINYINT(1) NULL,
  `fecha_autorizacion` DATE NULL,
  `sw_comercializado` TINYINT(1) NULL,
  `fec_comer` DATE NULL,
  `cod_sitreg` INT,
  `cod_sitreg_presen` INT,
  `fecha_situacion_registro` DATE NULL,
  `fec_sitreg_presen` DATE NULL,
  `cod_nacionales_inactivos` VARCHAR(255) NULL,
  `sw_tiene_excipientes_decl_obligatoria` TINYINT(1) NULL,
  `biosimilar` TINYINT(1) NULL,
  `cod_forfar` INT NULL,
  `cod_forfar_simplificada` INT NULL,
  `nro_pactiv` INT NULL,
  `cod_atc` INT,
  `teratogenia` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_tb_prescripcion_tb_diccionario_dcsa_idx` (`cod_dcsa` ASC),
  INDEX `fk_tb_prescripcion_tb_diccionario_dcp1_idx` (`cod_dcp` ASC),
  INDEX `fk_tb_prescripcion_tb_diccionario_dcpf1_idx` (`cod_dcpf` ASC),
  INDEX `fk_tb_prescripcion_tb_diccionario_envases1_idx` (`cod_envase` ASC),
  INDEX `fk_tb_prescripcion_tb_forma_farmaceutica1_idx` (`cod_forfar` ASC),
  INDEX `fk_tb_prescripcion_tb_forma_farmaceutica_simplificada1_idx` (`cod_forfar_simplificada` ASC),
  INDEX `fk_tb_prescripcion_tb_diccionario_atc1_idx` (`cod_atc` ASC),
  INDEX `fk_tb_prescripcion_tb_diccionario_unidad_contenido1_idx` (`unidad_contenido` ASC),
  INDEX `fk_tb_prescripcion_tb_diccionario_situacion_registro1_idx` (`cod_sitreg` ASC),
  INDEX `fk_tb_prescripcion_tb_diccionario_situacion_registro2_idx` (`cod_sitreg_presen` ASC),
  CONSTRAINT `fk_tb_prescripcion_tb_diccionario_dcsa`
    FOREIGN KEY (`cod_dcsa`)
    REFERENCES `medicinedb`.`tb_diccionario_dcsa` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_prescripcion_tb_diccionario_dcp1`
    FOREIGN KEY (`cod_dcp`)
    REFERENCES `medicinedb`.`tb_diccionario_dcp` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_prescripcion_tb_diccionario_dcpf1`
    FOREIGN KEY (`cod_dcpf`)
    REFERENCES `medicinedb`.`tb_diccionario_dcpf` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_prescripcion_tb_diccionario_envases1`
    FOREIGN KEY (`cod_envase`)
    REFERENCES `medicinedb`.`tb_diccionario_envases` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_prescripcion_tb_forma_farmaceutica1`
    FOREIGN KEY (`cod_forfar`)
    REFERENCES `medicinedb`.`tb_forma_farmaceutica` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_prescripcion_tb_forma_farmaceutica_simplificada1`
    FOREIGN KEY (`cod_forfar_simplificada`)
    REFERENCES `medicinedb`.`tb_forma_farmaceutica_simplificada` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_prescripcion_tb_diccionario_atc1`
    FOREIGN KEY (`cod_atc`)
    REFERENCES `medicinedb`.`tb_diccionario_atc` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_prescripcion_tb_diccionario_unidad_contenido1`
    FOREIGN KEY (`unidad_contenido`)
    REFERENCES `medicinedb`.`tb_diccionario_unidad_contenido` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_prescripcion_tb_diccionario_situacion_registro1`
    FOREIGN KEY (`cod_sitreg`)
    REFERENCES `medicinedb`.`tb_diccionario_situacion_registro` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_prescripcion_tb_diccionario_situacion_registro2`
    FOREIGN KEY (`cod_sitreg_presen`)
    REFERENCES `medicinedb`.`tb_diccionario_situacion_registro` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medicinedb`.`tb_diccionario_laboratorios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medicinedb`.`tb_diccionario_laboratorios` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `codigolaboratorio` INT NULL,
  `laboratorio` VARCHAR(255) NULL,
  `direccion` VARCHAR(255) NULL,
  `codigopostal` VARCHAR(45) NULL,
  `localidad` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medicinedb`.`tb_prescripcion_has_laboratorios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medicinedb`.`tb_prescripcion_has_laboratorios` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_prescripcion` INT NOT NULL,
  `laboratorio_titular` INT NOT NULL,
  `laboratorio_comercializador` INT NOT NULL,
  PRIMARY KEY (`id`, `id_prescripcion`, `laboratorio_titular`, `laboratorio_comercializador`),
  INDEX `fk_tb_prescripcion_has_tb_diccionario_laboratorios_tb_dicci_idx` (`laboratorio_titular` ASC),
  INDEX `fk_tb_prescripcion_has_tb_diccionario_laboratorios_tb_presc_idx` (`id_prescripcion` ASC),
  INDEX `fk_tb_prescripcion_has_tb_diccionario_laboratorios_tb_dicci_idx2` (`laboratorio_comercializador` ASC),
  CONSTRAINT `fk_tb_prescripcion_has_tb_diccionario_laboratorios_tb_prescri1`
    FOREIGN KEY (`id_prescripcion`)
    REFERENCES `medicinedb`.`tb_prescripcion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_prescripcion_has_tb_diccionario_laboratorios_tb_diccion1`
    FOREIGN KEY (`laboratorio_titular`)
    REFERENCES `medicinedb`.`tb_diccionario_laboratorios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_prescripcion_has_tb_diccionario_laboratorios_tb_diccion3`
    FOREIGN KEY (`laboratorio_comercializador`)
    REFERENCES `medicinedb`.`tb_diccionario_laboratorios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medicinedb`.`tb_diccionario_principios_activios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medicinedb`.`tb_diccionario_principios_activios` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nroprincipioactivo` BIGINT NULL,
  `codigoprincipioactivo` VARCHAR(45) NULL,
  `principioactivo` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medicinedb`.`tb_composicion_pa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medicinedb`.`tb_composicion_pa` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_prescripcion` INT NOT NULL,
  `cod_principio_activo` INT NULL,
  `orden_colacion` VARCHAR(45) NULL,
  `dosis_pa` VARCHAR(45) NULL,
  `unidad_dosis_pa` VARCHAR(45) NULL,
  `dosis_composicion` VARCHAR(45) NULL,
  `unidad_composicion` VARCHAR(45) NULL,
  `cantidad_volumen_unidad_composicion` VARCHAR(45) NULL,
  `unidad_volumen_unidad_composicion` VARCHAR(45) NULL,
  `dosis_administracion` VARCHAR(45) NULL,
  `unidad_administracion` VARCHAR(45) NULL,
  `dosis_prescripcion` VARCHAR(45) NULL,
  `unidad_prescripcion` VARCHAR(200) NULL,
  PRIMARY KEY (`id`, `id_prescripcion`),
  INDEX `fk_tb_composicion_pa_tb_diccionario_principios_activios1_idx` (`cod_principio_activo` ASC),
  INDEX `fk_tb_composicion_pa_tb_prescripcion1_idx` (`id_prescripcion` ASC),
  CONSTRAINT `fk_tb_composicion_pa_tb_diccionario_principios_activios1`
    FOREIGN KEY (`cod_principio_activo`)
    REFERENCES `medicinedb`.`tb_diccionario_principios_activios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_composicion_pa_tb_prescripcion1`
    FOREIGN KEY (`id_prescripcion`)
    REFERENCES `medicinedb`.`tb_prescripcion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medicinedb`.`tb_excipientes_decl_obrigatoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medicinedb`.`tb_excipientes_decl_obrigatoria` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `codigoedo` INT NULL,
  `edo` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medicinedb`.`tb_prescripcion_has_tb_excipientes_decl_obrigatoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medicinedb`.`tb_prescripcion_has_tb_excipientes_decl_obrigatoria` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_prescripcion` INT NOT NULL,
  `cod_excipiente` INT NOT NULL,
  PRIMARY KEY (`id`, `id_prescripcion`, `cod_excipiente`),
  INDEX `fk_tb_prescripcion_has_tb_excipientes_decl_obrigatoria_tb_e_idx` (`cod_excipiente` ASC),
  INDEX `fk_tb_prescripcion_has_tb_excipientes_decl_obrigatoria_tb_p_idx` (`id_prescripcion` ASC),
  CONSTRAINT `fk_tb_prescripcion_has_tb_excipientes_decl_obrigatoria_tb_pre1`
    FOREIGN KEY (`id_prescripcion`)
    REFERENCES `medicinedb`.`tb_prescripcion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_prescripcion_has_tb_excipientes_decl_obrigatoria_tb_exc1`
    FOREIGN KEY (`cod_excipiente`)
    REFERENCES `medicinedb`.`tb_excipientes_decl_obrigatoria` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medicinedb`.`tb_vias_administracion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medicinedb`.`tb_vias_administracion` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `codigoviaadministracion` INT NULL,
  `viaadministracion` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medicinedb`.`tb_prescripcion_has_vias_administracion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medicinedb`.`tb_prescripcion_has_vias_administracion` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_prescripcion` INT NOT NULL,
  `cod_via_admin` INT NOT NULL,
  PRIMARY KEY (`id`, `id_prescripcion`, `cod_via_admin`),
  INDEX `fk_tb_prescripcion_has_tb_vias_administracion_tb_vias_admin_idx` (`cod_via_admin` ASC),
  INDEX `fk_tb_prescripcion_has_tb_vias_administracion_tb_prescripci_idx` (`id_prescripcion` ASC),
  CONSTRAINT `fk_tb_prescripcion_has_tb_vias_administracion_tb_prescripcion1`
    FOREIGN KEY (`id_prescripcion`)
    REFERENCES `medicinedb`.`tb_prescripcion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_prescripcion_has_tb_vias_administracion_tb_vias_adminis1`
    FOREIGN KEY (`cod_via_admin`)
    REFERENCES `medicinedb`.`tb_vias_administracion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medicinedb`.`tb_notaseguridad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medicinedb`.`tb_notaseguridad` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_prescripcion` INT NOT NULL,
  `numero_nota_seguridad` VARCHAR(45) NULL,
  `referencia_nota_seguridad` VARCHAR(45) NULL,
  `asunto_nota_seguridad` VARCHAR(255) NULL,
  `fecha_nota_seguridad` DATE NULL,
  `url_nota_seguridad` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_tb_notaseguridad_tb_prescripcion1_idx` (`id_prescripcion` ASC),
  CONSTRAINT `fk_tb_notaseguridad_tb_prescripcion1`
    FOREIGN KEY (`id_prescripcion`)
    REFERENCES `medicinedb`.`tb_prescripcion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medicinedb`.`tb_interacciones_atc`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medicinedb`.`tb_interacciones_atc` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `atc_interaccion` INT NOT NULL,
  `descripcion_atc_interaccion` VARCHAR(255) NULL,
  `efecto_interaccion` VARCHAR(255) NULL,
  `recomendacion_interaccion` VARCHAR(255) NULL,
  `id_prescripcion` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_tb_interacciones_atc_tb_diccionario_atc1_idx` (`atc_interaccion` ASC),
  INDEX `fk_tb_interacciones_atc_tb_prescripcion1_idx` (`id_prescripcion` ASC),
  CONSTRAINT `fk_tb_interacciones_atc_tb_diccionario_atc1`
    FOREIGN KEY (`atc_interaccion`)
    REFERENCES `medicinedb`.`tb_diccionario_atc` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_interacciones_atc_tb_prescripcion1`
    FOREIGN KEY (`id_prescripcion`)
    REFERENCES `medicinedb`.`tb_prescripcion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medicinedb`.`tb_desaconsejados_geriatria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medicinedb`.`tb_desaconsejados_geriatria` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `alerta_geriatria` VARCHAR(255) NULL,
  `riesgo_pacience_geriatria` VARCHAR(255) NULL,
  `recomendacion_geriatria` VARCHAR(255) NULL,
  `id_prescripcion` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_tb_desaconsejados_geriatria_tb_prescripcion1_idx` (`id_prescripcion` ASC),
  CONSTRAINT `fk_tb_desaconsejados_geriatria_tb_prescripcion1`
    FOREIGN KEY (`id_prescripcion`)
    REFERENCES `medicinedb`.`tb_prescripcion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medicinedb`.`tb_duplicidade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medicinedb`.`tb_duplicidade` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `atc_duplicidad` INT NOT NULL,
  `descripcion_atc_duplicidad` VARCHAR(255) NULL,
  `efecto_duplicidad` VARCHAR(255) NULL,
  `recomendacion_duplicidad` VARCHAR(255) NULL,
  `id_prescripcion` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_tb_duplicidade_tb_diccionario_atc1_idx` (`atc_duplicidad` ASC),
  INDEX `fk_tb_duplicidade_tb_prescripcion1_idx` (`id_prescripcion` ASC),
  CONSTRAINT `fk_tb_duplicidade_tb_diccionario_atc1`
    FOREIGN KEY (`atc_duplicidad`)
    REFERENCES `medicinedb`.`tb_diccionario_atc` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_duplicidade_tb_prescripcion1`
    FOREIGN KEY (`id_prescripcion`)
    REFERENCES `medicinedb`.`tb_prescripcion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medicinedb`.`tb_etl_information`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medicinedb`.`tb_etl_information` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `listprescriptiondate` DATE NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
